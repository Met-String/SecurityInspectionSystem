<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.STR.mapper.SiteMapper">
    <resultMap id="siteResultMap" type="com.STR.entity.Site">
        <result property="frequency" column="frequency" typeHandler="com.STR.mapper.typeHandler.JsonFrequencyTypeHandler"/>
        <!-- 为其他属性配置映射 -->
    </resultMap>

    <insert id="addNewSite" parameterType="com.STR.entity.Site">
        insert into site(site_id, organization_id, group_id, name, address, longitude, latitude, state, usability, frequency, qrcode_serial_number, remark)
        values(#{site_id}, #{organization_id}, #{group_id}, #{name}, #{address}, #{longitude}, #{latitude}, #{state}, #{usability}, #{frequency, typeHandler=com.STR.mapper.typeHandler.JsonFrequencyTypeHandler}, #{qrcode_serial_number}, #{remark})
    </insert>

    <!--  对经纬度的修改是不可想象的 还不如新建一个点位  -->
    <update id="editSiteById" parameterType="com.STR.entity.Site">
        UPDATE site
        SET organization_id = #{organization_id},
            group_id = #{group_id},
            name = #{name},
            address = #{address},
            state = #{state},
            usability = #{usability},
            remark = #{remark},
            frequency = #{frequency, typeHandler=com.STR.mapper.typeHandler.JsonFrequencyTypeHandler},
            qrcode_serial_number = #{qrcode_serial_number}
        WHERE site_id = #{site_id}
    </update>

    <!--  时间系的修改会极为频繁 单独设一个入口  -->
    <update id="updateTimes" parameterType="com.STR.entity.Site">
        UPDATE site
        SET last_check_time = #{last_check_time},
            next_check_date = #{next_check_date}
        WHERE site_id = #{site_id}
    </update>
    
    <delete id="deleteSiteByID" parameterType="int">
        delete from site where site_id = #{id}
    </delete>

    <!--  统一条件查询入口  -->
    <select id="selectByCondition" parameterType="map" resultType="com.STR.entity.Site" resultMap="siteResultMap">
        SELECT s.*, u.user_id user_id, u.user_name user_name
        FROM site s
                 LEFT JOIN tasksite ts ON s.site_id = ts.site_id
                 LEFT JOIN task t ON ts.task_id = t.task_id
                 LEFT JOIN user u ON t.user_id = u.user_id
        <where>
            <if test="site_id != null">
                s.site_id = #{site_id}
            </if>
            <if test="task_id != null">
               AND t.task_id = #{task_id}
            </if>
            <if test="notBeAssigned == true">
                AND NOT EXISTS (
                    SELECT 1 FROM tasksite ts1 WHERE ts1.site_id = s.site_id
                )
            </if>
        </where>
    </select>
</mapper>